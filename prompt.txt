# ポモドーロTodoアプリ 要件定義書

**バージョン**: 1.0  
**作成日**: 2025-10-23  
**目的**: 複数AI協調 vs 単独AI の公平な比較実験

---

## 📋 目次

1. [概要](https://claude.ai/chat/75525f4d-a506-4597-96f8-cc461853a93f#%E6%A6%82%E8%A6%81)
2. [機能要件](https://claude.ai/chat/75525f4d-a506-4597-96f8-cc461853a93f#%E6%A9%9F%E8%83%BD%E8%A6%81%E4%BB%B6)
3. [技術要件](https://claude.ai/chat/75525f4d-a506-4597-96f8-cc461853a93f#%E6%8A%80%E8%A1%93%E8%A6%81%E4%BB%B6)
4. [非機能要件](https://claude.ai/chat/75525f4d-a506-4597-96f8-cc461853a93f#%E9%9D%9E%E6%A9%9F%E8%83%BD%E8%A6%81%E4%BB%B6)
5. [UI/UXデザイン要件](https://claude.ai/chat/75525f4d-a506-4597-96f8-cc461853a93f#uiux%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E8%A6%81%E4%BB%B6)
6. [データ構造](https://claude.ai/chat/75525f4d-a506-4597-96f8-cc461853a93f#%E3%83%87%E3%83%BC%E3%82%BF%E6%A7%8B%E9%80%A0)
7. [評価基準](https://claude.ai/chat/75525f4d-a506-4597-96f8-cc461853a93f#%E8%A9%95%E4%BE%A1%E5%9F%BA%E6%BA%96)
8. [制約事項](https://claude.ai/chat/75525f4d-a506-4597-96f8-cc461853a93f#%E5%88%B6%E7%B4%84%E4%BA%8B%E9%A0%85)

---

## 概要

### アプリケーション名

**PomoTodo** - ポモドーロタイマー統合型タスク管理アプリ

### 目的

タスク管理とポモドーロテクニックを統合し、生産性を向上させる

### ターゲットユーザー

- 在宅ワーカー
- フリーランス
- 学生
- 集中力を高めたい全ての人

### コアバリュー

1. **シームレスな統合**: タスクとタイマーが自然に連携
2. **シンプル**: 最小限の操作で使える
3. **データ駆動**: 実績を可視化してモチベーション向上

---

## 機能要件

### 🎯 必須機能

#### **1. Todoリスト機能**

##### 1.1 タスクの追加

```
入力項目:
- タスク名（必須、最大100文字）
- 見積もりポモドーロ数（任意、1-20の範囲）

動作:
- 入力フォームに入力してEnterキーまたは「追加」ボタン
- 空文字は追加不可（エラーメッセージ表示）
- 追加後、入力フォームはクリア
- 新しいタスクはリストの最上部に追加
- 追加時にアニメーション効果

エラー処理:
- 空文字: "タスク名を入力してください"
- 100文字超過: "タスク名は100文字以内で入力してください"
```

##### 1.2 タスクの編集

```
動作:
- タスク名をダブルクリックで編集モードに
- 入力フィールドが表示される
- Enterで確定、Escでキャンセル
- 編集中は他の操作を制限

エラー処理:
- 空文字に編集: "タスク名は必須です"
- 編集中にタイマー開始: "編集を完了してください"
```

##### 1.3 タスクの削除

```
動作:
- 各タスクに「削除」ボタン（✕アイコン）
- クリックで即座に削除
- 削除時にフェードアウトアニメーション

制約:
- タイマー実行中のタスクは削除不可
  → "タイマーを停止してから削除してください"
```

##### 1.4 タスクの完了チェック

```
動作:
- 各タスクにチェックボックス
- チェックすると完了状態に
  → タスク名に打ち消し線
  → 背景色が薄くなる
  → リストの下部に移動（オプション）
- 完了タスクのチェックを外すと未完了に戻る

連動:
- 完了時、そのタスクで実行したポモドーロ数を記録
```

##### 1.5 タスクのフィルタリング

```
フィルタオプション:
- 全て（デフォルト）
- 未完了のみ
- 完了済みのみ

動作:
- フィルタボタンをクリックで切り替え
- アクティブなフィルタはハイライト表示
- フィルタ変更時はアニメーション
- フィルタ状態はLocalStorageに保存
```

##### 1.6 データの永続化

```
保存内容:
- タスク一覧（ID、タスク名、完了状態、見積もり、実績ポモドーロ数、作成日時）
- フィルタ状態
- 最後に選択したタスクID

タイミング:
- タスクの追加/編集/削除/完了チェック時に即座に保存
- LocalStorageを使用
- JSON形式で保存

エラー処理:
- LocalStorageが満杯: "保存容量が不足しています"
- LocalStorageが無効: "データの保存ができません"
```

---

#### **2. ポモドーロタイマー機能**

##### 2.1 タイマーの種類

```
作業タイマー:
- デフォルト: 25分
- カスタマイズ可能: 1-60分（設定画面）

短い休憩:
- デフォルト: 5分
- カスタマイズ可能: 1-30分

長い休憩:
- デフォルト: 15分
- カスタマイズ可能: 5-60分
- 4ポモドーロごとに自動で提案
```

##### 2.2 タイマーの表示

```
表示内容:
- 現在のモード（作業中/休憩中）
- 残り時間（MM:SS形式）
- 進捗バー（円形または直線）
- 現在実行中のタスク名

デザイン:
- 大きく見やすいフォント（60px以上）
- 作業中: 赤系の色
- 休憩中: 緑系の色
- 進捗バーはアニメーション
```

##### 2.3 タイマーの操作

```
開始:
- タスクを選択してから「開始」ボタン
- タスク未選択時: "タスクを選択してください"
- 前回の続きから再開も可能

一時停止:
- 「一時停止」ボタン
- 一時停止中も残り時間を表示
- 再開ボタンで続きから

リセット:
- 「リセット」ボタン
- 確認ダイアログ: "タイマーをリセットしますか？"
- はい → タイマーをデフォルト時間に戻す
- いいえ → キャンセル

スキップ:
- 「スキップ」ボタン
- 作業中 → 休憩へ
- 休憩中 → 作業へ
```

##### 2.4 タイマーの精度

```
実装方法:
- setInterval使用
- 1秒ごとに更新
- システム時刻を基準に補正（ドリフト対策）

精度要件:
- 25分タイマーで誤差 ±1秒以内
- バックグラウンドでも継続
```

##### 2.5 タイマー終了時の動作

```
通知:
- 音で通知（ピッ音 × 3回）
- ブラウザ通知（Notification API）※許可された場合
- 視覚的な通知（画面点滅またはモーダル）

自動遷移:
- 作業終了 → 短い休憩へ自動遷移
- 休憩終了 → 次のタスク選択を促す

カウント:
- 作業完了時、タスクの実績ポモドーロ数を +1
- 今日の総ポモドーロ数を +1
- LocalStorageに保存
```

##### 2.6 タイマーの状態管理

```
保存内容:
- 現在のモード（作業/休憩/停止）
- 残り時間
- 開始時刻
- 現在のタスクID
- 今日の総ポモドーロ数
- 今日の完了したポモドーロのタイムスタンプ配列

復元:
- ページリロード時に状態を復元
- タイマー実行中なら継続
- ブラウザクローズ時も保存
```

---

#### **3. 統合機能**

##### 3.1 タスク選択とタイマーの連携

```
動作:
- タスクをクリックで選択状態に
- 選択中のタスクはハイライト表示
- タイマー画面に選択中のタスク名を表示
- 選択中のタスクの「開始」ボタンが有効化

制約:
- タイマー実行中はタスク選択不可
  → "タイマーを停止してから選択してください"
```

##### 3.2 ポモドーロ数のカウントと表示

```
表示場所:
- 各タスクに実績ポモドーロ数を表示
  例: "🍅 3/5" （実績3、見積もり5）
- タイマー画面に今日の総数を表示
  例: "Today: 🍅 8"

更新タイミング:
- タイマー終了時に自動更新
- リアルタイムで反映

色分け:
- 見積もり未達成: デフォルト色
- 見積もり達成: 緑色
- 見積もり超過: オレンジ色
```

##### 3.3 進捗の可視化

```
タスク単位:
- 進捗バー（実績/見積もり）
- パーセント表示（60% 完了）

日次統計:
- 今日完了したポモドーロ数
- 今日完了したタスク数
- 合計作業時間（ポモドーロ数 × 25分）

表示位置:
- タイマー画面の下部または
- ヘッダー部分に常時表示
```

---

### 🌟 追加機能（優先度順）

#### **4. 高優先度**

##### 4.1 タスクの見積もりポモドーロ数設定

```
入力:
- タスク追加時に入力（任意）
- 1-20の範囲
- デフォルト: 未設定

表示:
- タスクに "0/5" の形式で表示
- 未設定の場合: "🍅 3" （実績のみ）
```

##### 4.2 今日の統計表示

```
表示内容:
- 完了したポモドーロ数
- 完了したタスク数
- 合計作業時間
- 現在の連続ポモドーロ数（ストリーク）

表示方法:
- カード形式
- 数字は大きく目立つように
- アイコン付き
```

##### 4.3 通知音のカスタマイズ

```
選択肢:
- ピッ音（デフォルト）
- ベル
- チャイム
- サイレント

設定:
- 設定画面から選択
- LocalStorageに保存
```

---

#### **5. 中優先度**

##### 5.1 集中モード

```
機能:
- タイマー実行中は他の操作を制限
- タスクの追加/編集/削除が不可
- 選択中のタスク以外を薄く表示

有効化:
- 設定画面でON/OFF切り替え
- デフォルト: OFF
```

##### 5.2 週次統計グラフ

```
表示内容:
- 過去7日間のポモドーロ数を棒グラフで表示
- 日別の完了タスク数

実装:
- CSS + HTMLで簡易グラフ
  （Chart.jsなどのライブラリは不使用）
```

##### 5.3 タスクの並び替え

```
方法:
- ドラッグ&ドロップ（HTML5 Drag API）
- 上下移動ボタン（↑↓）

制約:
- フィルタ適用中は並び替え不可
```

---

#### **6. 低優先度**

##### 6.1 タスクの検索

```
動作:
- 検索ボックスに入力
- リアルタイムでフィルタリング
- タスク名の部分一致で検索
```

##### 6.2 完了タスクの一括削除

```
動作:
- 「完了タスクを削除」ボタン
- 確認ダイアログ
- すべての完了タスクを削除
```

##### 6.3 データのエクスポート/インポート

```
エクスポート:
- JSONファイルとしてダウンロード

インポート:
- JSONファイルを選択してアップロード
- 既存データとマージ
```

---

## 技術要件

### 📦 使用技術

#### **必須**

```
フロントエンド:
- HTML5
- CSS3（Flexbox / Grid）
- Vanilla JavaScript（ES6+）

API:
- LocalStorage API（データ永続化）
- Notification API（ブラウザ通知）※オプション
- Web Audio API または Audio要素（通知音）

ブラウザ対応:
- Chrome 90+
- Firefox 88+
- Safari 14+
- Edge 90+
```

#### **禁止**

```
以下は使用不可:
- React / Vue / Angular などのフレームワーク
- jQuery などのライブラリ
- TypeScript
- npm / webpack などのビルドツール
- Tailwind CSS などのCSSフレームワーク

理由:
- 依存関係をゼロにする
- ブラウザで開くだけで動作させる
- 比較実験の公平性を保つ
```

---

### 🏗️ アーキテクチャ

#### **ファイル構成**

```
必須:
- index.html（メインHTML）
- app.js（アプリケーションロジック）
- style.css（スタイル）

推奨される構造:
app.js内:
- データモデル層（Task, Timer クラスなど）
- ビューコントローラー層（DOM操作）
- ストレージ層（LocalStorage操作）
```

#### **設計パターン**

```
推奨:
- MVC風の構造
- 関数は単一責任の原則
- グローバル変数は最小限

避ける:
- スパゲッティコード
- 巨大な関数（100行超）
- 過度なネスト（4段階まで）
```

---

### 💾 データ構造

#### **Taskオブジェクト**

```javascript
{
  id: "task_1698012345678",           // ユニークID（タイムスタンプベース）
  title: "資料作成",                   // タスク名（必須、最大100文字）
  completed: false,                    // 完了状態（boolean）
  estimatedPomodoros: 5,               // 見積もりポモドーロ数（任意、1-20）
  actualPomodoros: 3,                  // 実績ポモドーロ数（0以上）
  createdAt: "2025-10-23T10:30:00Z",  // 作成日時（ISO 8601形式）
  completedAt: null                    // 完了日時（ISO 8601形式、未完了時はnull）
}
```

#### **Timerオブジェクト**

```javascript
{
  mode: "work",                        // "work" | "shortBreak" | "longBreak" | "idle"
  duration: 1500,                      // 設定時間（秒）
  remainingTime: 1342,                 // 残り時間（秒）
  isRunning: false,                    // 実行中フラグ
  isPaused: false,                     // 一時停止フラグ
  currentTaskId: "task_1698012345678", // 実行中のタスクID（nullの場合あり）
  startedAt: "2025-10-23T11:00:00Z",  // 開始時刻（ISO 8601形式）
  pomodoroCount: 8                     // 今日の総ポモドーロ数
}
```

#### **Settingsオブジェクト**

```javascript
{
  workDuration: 25,                    // 作業時間（分）
  shortBreakDuration: 5,               // 短い休憩（分）
  longBreakDuration: 15,               // 長い休憩（分）
  longBreakInterval: 4,                // 長い休憩の間隔（ポモドーロ数）
  notificationSound: "beep",           // 通知音（"beep" | "bell" | "chime" | "silent"）
  focusMode: false,                    // 集中モード（boolean）
  filterState: "all"                   // フィルタ状態（"all" | "active" | "completed"）
}
```

#### **LocalStorageのキー**

```
"pomotodo_tasks"        → Task配列のJSON
"pomotodo_timer"        → TimerオブジェクトのJSON
"pomotodo_settings"     → SettingsオブジェクトのJSON
"pomotodo_today"        → 今日の日付（YYYY-MM-DD形式）
"pomotodo_history"      → ポモドーロ履歴の配列（過去30日分）
```

---

## 非機能要件

### ⚡ パフォーマンス

```
応答時間:
- ボタンクリック → 反映: 100ms以内
- タスク追加/削除: 200ms以内
- フィルタ切り替え: 100ms以内

タイマー精度:
- 25分タイマーで誤差 ±1秒以内
- バックグラウンドでも動作継続

メモリ使用量:
- 5MB以下（タスク100件時）

データ容量:
- LocalStorageは5MB制限内
- タスク100件で約50KB
```

---

### 🔒 セキュリティ

```
XSS対策:
- ユーザー入力は必ずエスケープ
- innerHTML使用時は注意
- textContent / createTextNode を優先

データ検証:
- タスク名: 100文字以内
- 見積もりポモドーロ数: 1-20
- タイマー時間: 1-60分

エラーハンドリング:
- try-catchでLocalStorageエラーをキャッチ
- ユーザーにわかりやすいエラーメッセージ
```

---

### ♿ アクセシビリティ

```
キーボード操作:
- Tab / Shift+Tab: フォーカス移動
- Enter: ボタンクリック、タスク追加
- Space: チェックボックストグル
- Escape: モーダルやダイアログを閉じる

スクリーンリーダー対応:
- 適切なARIA属性（role, aria-label, aria-live）
- セマンティックHTML（button, input, labelなど）
- フォーカス可能な要素に明確なフォーカススタイル

色覚対応:
- 色だけに依存しない情報伝達
- 十分なコントラスト比（WCAG AA準拠）
```

---

## UI/UXデザイン要件

### 🎨 レイアウト

#### **デスクトップ（1024px以上）**

```
┌─────────────────────────────────────────────┐
│  Header: PomoTodo 📊 Today: 🍅 8           │
├──────────────────┬──────────────────────────┤
│  Todoリスト      │  ポモドーロタイマー      │
│  (左カラム)      │  (右カラム)              │
│                  │                          │
│  [+] 新規タスク  │     [作業中]             │
│  ─────────────   │                          │
│  □ 資料作成      │       25:00              │
│     🍅 3/5       │     ═════════            │
│  ☑ メール返信    │                          │
│     🍅 2/2       │  「資料作成」実行中      │
│  □ 会議準備      │                          │
│     🍅 0/3       │  [一時停止] [リセット]   │
│                  │                          │
│  [全て|未完了|完了]│                         │
│                  │                          │
│                  │  統計                    │
│                  │  Today: 🍅 8             │
│                  │  Tasks: ✓ 3/8           │
│                  │  Time: 3h 20m           │
└──────────────────┴──────────────────────────┘

比率: 
- 左カラム: 40%
- 右カラム: 60%
```

#### **タブレット（768px-1023px）**

```
同じ2カラムレイアウトだが、
- 左カラム: 45%
- 右カラム: 55%
```

#### **モバイル（768px未満）**

```
┌─────────────────────────┐
│  Header: PomoTodo       │
├─────────────────────────┤
│  タイマー                │
│  (上部)                  │
│      [作業中]            │
│        25:00            │
│      ═══════            │
│                         │
├─────────────────────────┤
│  Todoリスト             │
│  (下部、スクロール可能)  │
│                         │
│  [+] 新規タスク         │
│  ─────────────          │
│  □ 資料作成 🍅 3/5      │
│  ☑ メール返信 🍅 2/2    │
│  □ 会議準備 🍅 0/3      │
│                         │
└─────────────────────────┘

タブで切り替えも検討:
[タイマー] [タスク] [統計]
```

---

### 🎨 カラースキーム

#### **ライトモード（デフォルト）**

```css
:root {
  /* Primary Colors */
  --primary-red: #e74c3c;      /* 作業中の色 */
  --primary-green: #27ae60;    /* 休憩中の色 */
  --primary-blue: #3498db;     /* アクセント */
  
  /* Background */
  --bg-main: #ffffff;          /* メイン背景 */
  --bg-secondary: #f8f9fa;     /* セカンダリ背景 */
  --bg-hover: #e9ecef;         /* ホバー時 */
  
  /* Text */
  --text-primary: #2c3e50;     /* メインテキスト */
  --text-secondary: #7f8c8d;   /* サブテキスト */
  --text-disabled: #bdc3c7;    /* 無効状態 */
  
  /* Border */
  --border-color: #dee2e6;
  
  /* Status */
  --success: #27ae60;
  --warning: #f39c12;
  --error: #e74c3c;
}
```

#### **ダークモード**

```css
@media (prefers-color-scheme: dark) {
  :root {
    /* Background */
    --bg-main: #1a1a1a;
    --bg-secondary: #2d2d2d;
    --bg-hover: #3d3d3d;
    
    /* Text */
    --text-primary: #e0e0e0;
    --text-secondary: #a0a0a0;
    --text-disabled: #666666;
    
    /* Border */
    --border-color: #404040;
  }
}
```

---

### 🎨 タイポグラフィ

```css
/* フォント */
font-family: 
  -apple-system, 
  BlinkMacSystemFont, 
  "Segoe UI", 
  "Roboto", 
  "Helvetica Neue", 
  Arial, 
  sans-serif;

/* サイズ */
--font-size-xs: 12px;
--font-size-sm: 14px;
--font-size-base: 16px;
--font-size-lg: 18px;
--font-size-xl: 24px;
--font-size-2xl: 32px;
--font-size-timer: 64px;  /* タイマー表示用 */

/* ウェイト */
--font-weight-normal: 400;
--font-weight-medium: 500;
--font-weight-bold: 700;
```

---

### 🎨 コンポーネント

#### **ボタン**

```css
/* プライマリボタン */
.btn-primary {
  background: var(--primary-blue);
  color: white;
  padding: 12px 24px;
  border-radius: 8px;
  border: none;
  cursor: pointer;
  transition: all 0.2s;
}

.btn-primary:hover {
  background: #2980b9;
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

/* セカンダリボタン */
.btn-secondary {
  background: transparent;
  color: var(--text-primary);
  border: 1px solid var(--border-color);
}

/* 危険ボタン（削除など） */
.btn-danger {
  background: var(--error);
  color: white;
}
```

#### **入力フィールド**

```css
input, textarea {
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 12px 16px;
  font-size: var(--font-size-base);
  transition: border-color 0.2s;
}

input:focus {
  outline: none;
  border-color: var(--primary-blue);
  box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
}

/* エラー状態 */
input.error {
  border-color: var(--error);
}
```

#### **タスクカード**

```css
.task-item {
  background: var(--bg-main);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 16px;
  margin-bottom: 8px;
  display: flex;
  align-items: center;
  transition: all 0.2s;
}

.task-item:hover {
  background: var(--bg-hover);
  transform: translateX(4px);
}

.task-item.selected {
  border-color: var(--primary-blue);
  background: rgba(52, 152, 219, 0.05);
}

.task-item.completed {
  opacity: 0.6;
}

.task-item.completed .task-title {
  text-decoration: line-through;
  color: var(--text-secondary);
}
```

---

### 🎨 アニメーション

```css
/* フェードイン */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* タスク追加時 */
.task-item.new {
  animation: fadeIn 0.3s ease-out;
}

/* タスク削除時 */
.task-item.removing {
  animation: fadeOut 0.3s ease-out forwards;
}

@keyframes fadeOut {
  to {
    opacity: 0;
    transform: translateX(-20px);
  }
}

/* タイマーの脈動 */
@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

.timer.running {
  animation: pulse 2s ease-in-out infinite;
}
```

---

## 評価基準

### 📊 評価シート（100点満点）

#### **機能完成度（50点）**

**Todoリスト（20点）**

|項目|配点|評価基準|
|---|---|---|
|追加|3点|正常動作、エラーハンドリング|
|編集|3点|ダブルクリック編集、Enter/Esc対応|
|削除|3点|削除ボタン、タイマー中は削除不可|
|完了チェック|4点|チェック動作、打ち消し線、色変更|
|フィルタリング|4点|3つのフィルタ、切り替え|
|データ永続化|3点|LocalStorage保存、エラー処理|

**ポモドーロタイマー（20点）**

|項目|配点|評価基準|
|---|---|---|
|タイマー動作|4点|正確なカウントダウン、表示|
|開始/一時停止/リセット|4点|すべてのボタンが正常動作|
|作業/休憩の切り替え|4点|自動遷移、モード表示|
|通知|3点|音、視覚的通知|
|タイマー精度|3点|±1秒以内、ドリフト対策|
|状態の永続化|2点|リロード後も復元|

**統合機能（10点）**

|項目|配点|評価基準|
|---|---|---|
|タスク選択→タイマー連携|3点|スムーズな連携|
|ポモドーロ数の自動カウント|3点|正確なカウント、表示|
|今日の統計表示|2点|総数、完了タスク数|
|進捗表示|2点|実績/見積もりの表示|

---

#### **コード品質（25点）**

**読みやすさ（8点）**

|項目|配点|評価基準|
|---|---|---|
|命名規則|3点|わかりやすい変数名、一貫性|
|コメント|2点|適切な量、分かりやすい説明|
|インデント・フォーマット|2点|一貫したスタイル|
|マジックナンバー回避|1点|定数化されているか|

**保守性（8点）**

|項目|配点|評価基準|
|---|---|---|
|関数の分割|3点|単一責任、適切な粒度|
|DRY原則|2点|重複コードがない|
|疎結合|2点|モジュール間の依存が少ない|
|拡張性|1点|機能追加しやすい構造|

**バグの少なさ（9点）**

|項目|配点|評価基準|
|---|---|---|
|クリティカルバグ|5点|重大なバグがない（減点方式）|
|エッジケース対応|2点|空文字、null、境界値など|
|エラーハンドリング|2点|try-catch、適切なエラー表示|

---

#### **パフォーマンス（10点）**

**動作速度（6点）**

|項目|配点|評価基準|
|---|---|---|
|タスク操作の応答|2点|100ms以内|
|フィルタ切り替え|1点|100ms以内|
|タイマー精度|2点|±1秒以内|
|大量データ対応|1点|100件でも快適|

**メモリ効率（4点）**

|項目|配点|評価基準|
|---|---|---|
|メモリ使用量|2点|5MB以内|
|メモリリーク|2点|イベントリスナーの適切な削除|

---

#### **UX（15点）**

**使いやすさ（10点）**

|項目|配点|評価基準|
|---|---|---|
|直感的な操作|3点|説明なしで使える|
|フィードバック|2点|アニメーション、状態表示|
|エラーメッセージ|2点|わかりやすい、解決方法提示|
|キーボード操作|2点|Enter、Tab、Escapeなど|
|レスポンシブ|1点|モバイルでも使いやすい|

**デザイン（5点）**

|項目|配点|評価基準|
|---|---|---|
|見た目の美しさ|2点|モダン、統一感|
|タイマーの視認性|2点|大きく見やすい|
|色使い|1点|適切なコントラスト|

---

## 制約事項

### 🚫 技術的制約

```
必須:
✓ HTML5, CSS3, Vanilla JavaScript のみ
✓ ブラウザで開くだけで動作
✓ ファイル数: 3つまで（HTML, JS, CSS）
✓ 総行数: 700行以内
✓ LocalStorage使用

禁止:
✗ フレームワーク（React, Vue, Angularなど）
✗ ライブラリ（jQuery, Lodash, Chart.jsなど）
✗ TypeScript
✗ ビルドツール（webpack, Viteなど）
✗ CSS フレームワーク（Bootstrap, Tailwindなど）
✗ 外部API（OpenAI API など）※比較の公平性のため
```

---

### ⏱️ 時間的制約

```
実装目安時間:
- Multi-AI: 3-5分
- Claude単独: 4-6分
- Codex単独: 5-7分

制限時間:
- 各方式とも最大10分
- 10分を超えた場合は未完成として評価
```

---

### 💾 データ制約

```
LocalStorage:
- 容量上限: 5MB
- タスク100件で約50KB
- 余裕を持った設計

データ保持:
- タスクデータ: 無期限
- タイマー状態: 無期限
- 統計データ: 過去30日分
```

---

## 📎 付録

### A. サンプルデータ

```javascript
// 初期サンプルタスク（デモ用）
const sampleTasks = [
  {
    id: "task_001",
    title: "プロジェクト企画書作成",
    completed: false,
    estimatedPomodoros: 5,
    actualPomodoros: 3,
    createdAt: "2025-10-23T09:00:00Z",
    completedAt: null
  },
  {
    id: "task_002",
    title: "メール返信",
    completed: true,
    estimatedPomodoros: 2,
    actualPomodoros: 2,
    createdAt: "2025-10-23T09:30:00Z",
    completedAt: "2025-10-23T11:00:00Z"
  },
  {
    id: "task_003",
    title: "会議資料準備",
    completed: false,
    estimatedPomodoros: 3,
    actualPomodoros: 0,
    createdAt: "2025-10-23T10:00:00Z",
    completedAt: null
  }
];
```

---

### B. エラーメッセージ一覧

|コード|メッセージ|表示タイミング|
|---|---|---|
|E001|タスク名を入力してください|空文字で追加|
|E002|タスク名は100文字以内で入力してください|文字数超過|
|E003|タスクを選択してください|タスク未選択でタイマー開始|
|E004|タイマーを停止してから削除してください|タイマー中のタスク削除|
|E005|保存容量が不足しています|LocalStorage満杯|
|E006|データの保存ができません|LocalStorage無効|
|E007|タイマーをリセットしますか？|リセットボタン|
|E008|編集を完了してください|編集中に他操作|

---

### C. チェックリスト

実装完了時にチェックしてください。

**必須機能**

- [ ] タスクの追加
- [ ] タスクの編集
- [ ] タスクの削除
- [ ] タスクの完了チェック
- [ ] タスクのフィルタリング
- [ ] タスクのLocalStorage保存
- [ ] タイマーの開始/一時停止/リセット
- [ ] 25分/5分タイマー
- [ ] タイマー終了時の通知
- [ ] タスク選択とタイマーの連携
- [ ] ポモドーロ数の自動カウント
- [ ] 今日の統計表示

**コード品質**

- [ ] 一貫した命名規則
- [ ] 適切なコメント
- [ ] 関数は単一責任
- [ ] エラーハンドリング
- [ ] XSS対策

**パフォーマンス**

- [ ] タイマー精度 ±1秒以内
- [ ] 操作の応答 100ms以内
- [ ] メモリリークなし

**UX**

- [ ] レスポンシブデザイン
- [ ] アニメーション
- [ ] わかりやすいエラー表示
- [ ] キーボード操作対応

---

**このドキュメントのバージョン**: 1.0  
**最終更新日**: 2025-10-23  
**作成者**: Multi-AI Orchestrium Project
